scopes = {'global': {'parent': None, 'variables': set()}, 'foo': {'parent': 'global', 'variables': set('a')}}
var = 'ad'
scopes['foo']['variables'].add(var)
print(scopes)


139618512 Барсуков Андрей Николаевич 10.5
>>> line >>> 83
['139618512',
 '{\'message\': \'[+] Test #1. OK\\n[+] Test #2. OK\\n[+] Test #3. OK\\n[+] Test #4. OK\\n[+] Test #5. OK\\n[+] Test #6. OK\\n[ ] Test #7. Wrong answer\\n[+] Test #8. OK\\n[+] Test #9. OK\\n[+] Test #10. OK\\n[+] Test #11. OK\\n[ ] Test #12. Time limit exceeded\\n[ ] Test #13. Wrong answer\\n[+] Test #14. OK\\n[ ] Test #15. Time limit exceeded\\n[+] Test #16. OK\\n[ ] Test #17. Time limit exceeded\\n[+] Test #18. OK\\n[+] Test #19. OK\\n[ ] Test #20. Wrong answer\\n\\n14 of 20 test(s) passed.\', \'code_style\': {\'quality\': {\'code\': \'BAD\', \'text\': \'Code quality (beta): BAD\'}, \'errors\': [{\'code\': \'E226\', \'text\': \'missing whitespace around arithmetic operator\', \'line\': \'for i in range(q-1):\', \'line_number\': 7, \'column_number\': 16, \'category\': \'CODE_STYLE\'}, {\'code\': \'E226\', \'text\': \'missing whitespace around arithmetic operator\', \'line\': \'if a[i+1] >= a[i]:\', \'line_number\': 8, \'column_number\': 10, \'category\': \'CODE_STYLE\'}, {\'code\': \'E226\', \'text\': \'missing whitespace around arithmetic operator\', \'line\': \'t.append(a[i+1] - a[i])\', \'line_number\': 9, \'column_number\': 20, \'category\': \'CODE_STYLE\'}, {\'code\': \'E226\', \'text\': \'missing whitespace around arithmetic operator\', \'line\': \'t.append(a[i] - a[i+1])\', \'line_number\': 11, \'column_number\': 27, \'category\': \'CODE_STYLE\'}, {\'code\': \'C0325\', \'text\': "Unnecessary parens after \'not\' keyword", \'line\': \'while max(t) > 1 and not (max(t) == -1):\', \'line_number\': 12, \'column_number\': 0, \'category\': \'CODE_STYLE\'}, {\'code\': \'E226\', \'text\': \'missing whitespace around arithmetic operator\', \'line\': \'if a[c] > a[c+1]:\', \'line_number\': 14, \'column_number\': 17, \'category\': \'CODE_STYLE\'}, {\'code\': \'E226\', \'text\': \'missing whitespace around arithmetic operator\', \'line\': \'mi, ma = a[c+1], a[c]\', \'line_number\': 15, \'column_number\': 20, \'category\': \'CODE_STYLE\'}, {\'code\': \'E226\', \'text\': \'missing whitespace around arithmetic operator\', \'line\': \'ma, mi = a[c+1], a[c]\', \'line_number\': 17, \'column_number\': 20, \'category\': \'CODE_STYLE\'}, {\'code\': \'E226\', \'text\': \'missing whitespace around arithmetic operator\', \'line\': \'if ((mi+1) not in a) and ((ma-1) not in a) and (mi+1 != ma-1):\', \'line_number\': 18, \'column_number\': 11, \'category\': \'CODE_STYLE\'}, {\'code\': \'E226\', \'text\': \'missing whitespace around arithmetic operator\', \'line\': \'if ((mi+1) not in a) and ((ma-1) not in a) and (mi+1 != ma-1):\', \'line_number\': 18, \'column_number\': 33, \'category\': \'CODE_STYLE\'}, {\'code\': \'E226\', \'text\': \'missing whitespace around arithmetic operator\', \'line\': \'if ((mi+1) not in a) and ((ma-1) not in a) and (mi+1 != ma-1):\', \'line_number\': 18, \'column_number\': 54, \'category\': \'CODE_STYLE\'}, {\'code\': \'E226\', \'text\': \'missing whitespace around arithmetic operator\', \'line\': \'if ((mi+1) not in a) and ((ma-1) not in a) and (mi+1 != ma-1):\', \'line_number\': 18, \'column_number\': 62, \'category\': \'CODE_STYLE\'}, {\'code\': \'E226\', \'text\': \'missing whitespace around arithmetic operator\', \'line\': \'a[c], a[c + 1] = a[c] - 1, a[c+1] + 1\', \'line_number\': 20, \'column_number\': 42, \'category\': \'CODE_STYLE\'}, {\'code\': \'E226\', \'text\': \'missing whitespace around arithmetic operator\', \'line\': \'a[c], a[c + 1] = a[c] + 1, a[c+1] - 1\', \'line_number\': 22, \'column_number\': 42, \'category\': \'CODE_STYLE\'}, {\'code\': \'C0305\', \'text\': \'Trailing newlines\', \'line\': \'\', \'line_number\': 45, \'column_number\': 0, \'category\': \'CODE_STYLE\'}]}}',
 'correct',
 '{\'code\': "q = int(input())\\na = list(map(int, input().split()))\\n\\nk = 0\\nt = []\\ne = True\\nt = []\\nfor i in range(q-1):\\n  if a[i+1] >= a[i]:\\n  t.append(a[i+1] - a[i])\\n  else:\\n  t.append(a[i] - a[i+1])\\nwhile max(t) > 1 and not (max(t) == -1):\\n  c = t.index(max(t))\\n  if a[c] > a[c+1]:\\n  mi, ma = a[c+1], a[c]\\n  else:\\n  ma, mi = a[c+1], a[c]\\n  if ((mi+1) not in a) and ((ma-1) not in a) and (mi+1 != ma-1):\\n  if a[c] > a[c + 1]:\\n  a[c], a[c + 1] = a[c] - 1, a[c+1] + 1\\n  else:\\n  a[c], a[c + 1] = a[c] + 1, a[c+1] - 1\\n  t = []\\n  for i in range(q - 1):\\n  if a[i + 1] >= a[i]:\\n  t.append(a[i + 1] - a[i])\\n  else:\\n  t.append(a[i] - a[i + 1])\\n  k = 0\\n  else:\\n  t[c] = -1\\n  if k < 1 and max(t) == -1:\\n  k += 1\\n  t = []\\n  for i in range(q - 1):\\n  t.append(a[i + 1] - a[i])\\n\\nans = \'\'\\nfor i in range(q):\\n  ans += str(a[i]) + \' \'\\nans = ans[:-1]\\nprint(ans)\\n\\n\\n\\n", \'language\': \'python3\'}',
 '2032311']
correct
